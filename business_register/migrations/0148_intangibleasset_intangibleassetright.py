# Generated by Django 3.1.12 on 2021-07-09 14:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('business_register', '0147_auto_20210708_1239'),
    ]

    operations = [
        migrations.CreateModel(
            name='IntangibleAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the object was created. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the object was update. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, default=None, editable=False, null=True)),
                ('valuation', models.DecimalField(blank=True, decimal_places=2, help_text='valuation of the intangible asset', max_digits=12, null=True)),
                ('quantity', models.FloatField(blank=True, help_text='quantity of intangible assets', null=True)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'The right to use subsoil or other natural resources'), (2, 'Trademark or trade name'), (3, 'Cryptocurrency'), (4, 'Useful model'), (5, 'Copyright'), (6, 'Invention'), (7, 'Industrial design'), (8, 'Other')], help_text='type of intangible asset.')),
                ('additional_info', models.TextField(blank=True, default='', help_text='additional info about intangible asset')),
                ('description', models.TextField(blank=True, default='', help_text='description of the intangible asset')),
                ('cryptocurrency_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Bitcoin'), (2, 'ETHERIUM'), (3, 'Ripple'), (4, 'NXT'), (5, 'Litecoin'), (6, 'Ravencoin'), (7, 'USDT'), (8, 'Zilliqa'), (9, 'Syntropy'), (10, 'Swissborg'), (11, 'EOS'), (12, 'Utrust')], help_text='the name of the cryptocurrency', null=True)),
                ('declaration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='intangible_assets', to='business_register.declaration')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IntangibleAssetRight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the object was created. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the object was update. In YYYY-MM-DDTHH:mm:ss.SSSSSSZ format.', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, default=None, editable=False, null=True)),
                ('type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Ownership'), (2, 'Beneficial ownership'), (3, 'Joint ownership'), (4, 'Common property'), (5, 'Rent'), (6, 'Usage'), (10, 'Other right of usage'), (7, 'Owner is another person'), (20, 'Family member did not provide the information')], help_text='type of the right', null=True, verbose_name='type')),
                ('owner_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Declarant'), (2, 'Family member'), (3, 'Ukraine citizen'), (4, 'Foreign citizen'), (5, 'Legal entity registered in Ukraine'), (6, 'Legal entity registered abroad')], help_text='type of the owner', null=True, verbose_name='owner type')),
                ('additional_info', models.TextField(blank=True, default='', help_text='additional info about the right', verbose_name='additional info')),
                ('acquisition_date', models.DateField(blank=True, help_text='date of acquisition of the right', null=True, verbose_name='acquisition date')),
                ('share', models.DecimalField(blank=True, decimal_places=2, help_text='share of the right', max_digits=12, null=True, verbose_name='share of the right')),
                ('full_name', models.CharField(blank=True, default='', help_text='full name of the person that owns the right', max_length=75, verbose_name='full name')),
                ('company_name', models.TextField(blank=True, default='', help_text='name of the company that owns the right', verbose_name='company name')),
                ('company', models.ForeignKey(blank=True, default=None, help_text='company or organisation that owns the right', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='business_register_intangibleassetright_rights', to='business_register.company', verbose_name='company')),
                ('intangible_assets', models.ForeignKey(help_text='right to the intangible asset', on_delete=django.db.models.deletion.CASCADE, related_name='rights', to='business_register.intangibleasset', verbose_name='intangible_asset_right')),
                ('pep', models.ForeignKey(blank=True, default=None, help_text='politically exposed person that owns the right', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='business_register_intangibleassetright_rights', to='business_register.pep', verbose_name='PEP that owns the right')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
